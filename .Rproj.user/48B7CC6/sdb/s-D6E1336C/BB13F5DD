{
    "contents" : "library(forecast)\n\nqclcd = read.csv('../Data/QCLCD/daily/2015.txt')\nnames(qclcd)\nlewiston = qclcd[qclcd$WBAN==24149,]\nhead(lewiston)\nyakima = qclcd[qclcd$WBAN==24243,]\nhead(yakima)\nspokane = qclcd[qclcd$WBAN==24157,]\nhead(spokane)\n\n\n# extract net solar radiation from rasters\nuswrf.sfc = brick('../GIS/NARR/uswrf.sfc.2015.nc')\ndswrf = brick('../GIS/NARR/dswrf.2015.nc')\nnetswr = dswrf - uswrf.sfc\nplot(netswr[[5]])\n\nstation.locations = shapefile('../GIS/WeatherStationsUsed.shp')\nstation.locations = spTransform(station.locations, crs(uswrf.sfc))\ncrs(station.locations)\n\nplot(netswr[[100]])\nplot(station.locations, add=T)\nanimate(netswr)\n\nvalues = raster::extract(netswr, station.locations)  \n# NARR: W/m^2  (per day)\n# RBM-10 uses kcal/meter^2/second\n# 1 Watt equals .86 kcal/hr\nnetswr.values = values * .86 / 3600\n#station.locations$STAID\nplot(netswr.values[1,])\n\nclouds = brick('../GIS/NARR/tcdc.2015.nc')\nplot(clouds[[1]])\nanimate(clouds)\nclouds.values = raster::extract(clouds, station.locations)  \n\n\n#\n# 1: process first order data into HOT file format\n#\n\nprimary.stations = list()\n\nfor(station.index in 1:2) {\n\n# 1: lewiston \nif(station.index == 1) {\n  station.elevation = 1436 # ft  file says 740\n  station.data = lewiston\n\n  filename = 'LEWISTON.HOT'\n  station.name = 'LEWISTON WBAN24149'\n  station.latitude = 46\n  station.longitude = 117\n  start = '20150101'\n  end = '20151231'\n  \n} else if(station.index == 2) {\n  station.elevation = 1068 # ft  file says 740\n  station.data = yakima\n  \n  filename = 'YAKIMA.HOT'\n  station.name = 'YAKIMA WBAN24343'\n  station.latitude = 47\n  station.longitude = 121\n  start = '20150101'\n  end = '20151231'  \n  \n}\n\n\n# yakima = 1068 ft file says 1063\n# richland = 373 ft , plus 15 ft possibly? file says 2000\n# WNATCHEE = 626 ft   file says 1000\nair.temperature = as.numeric(levels(station.data$Tavg))[station.data$Tavg]\nair.temperature = na.interp(air.temperature)\nair.temperature.C = (air.temperature-32)*(5/9)\n\n\n# * CALCULATING VARIABLES NEEDED FOR WEATHER FILE\n# Taken from ReadWeat.for\n\n\ndf = as.data.frame(1:365)\n# solar radiation\ndf$Solar = netswr.values[station.index,]\n\n# atmospheric radiation\n# (Ha -Hra)= (1-?ar)1.23 x 10-16 (1.0 + 0.17 C^2)(TDB + 273.)^6\nA1 = (1-0.03)*(1.23E-16)*(1.0+0.17*((clouds.values[station.index,]/100)**2.0))\nA2 = (air.temperature.C+273.)**6.0\ndf$Atmospheric = A1*A2\n\n# air temperature (C)\ndf$AirTemperature = air.temperature.C\n\n# wind speed\n# QCLCD reported as 'Average Speed'  MPH\n# NOT the 'Resultant Speed' which is a vector average\nwind = as.numeric(levels(station.data$AvgSpeed))[station.data$AvgSpeed]  \nwind = na.interp(wind)\ndf$Wind = wind\n\n# Bowen Ratio\n# ReadWeat.for equations\n# A3 = 0.24*(1013.3*(((288.15-(0.0065*ELEV))/288.15)**5.258))  # note that 5.258 is slightly in error\n# A4 = 0.622*((597.3-0.564*((ATEMP(I)-32.0)*(5.0/9.0))))\n# BOWEN(I) = A3/A4\n# BowenRatio =(ca P) / (0.622 * lambda)\n# P = Barometric Formula  https://en.wikipedia.org/wiki/Barometric_formula\n# lambda = 597.3 â€“ (0.564 Td)  Td in Celcius\nbowen.ratio = function(station.elevation, air.temperature.C) {\n  Ca = .24 # heat capacity of air, cal/g/C, 0.24 \n  P = 1013.3 *( 288.15 / (288.15 - .0065 * station.elevation  )  ) ^ -5.2558\n  lambda = 597.3 - (0.564 * air.temperature.C)\n  Bowen = Ca * P / (.622 * lambda)\n  return(Bowen)\n}\ndf$Bowen = bowen.ratio(station.elevation, air.temperature.C)\n\n# Vapor Pressure\n# ReadWeat.for equations\n#  A5 = (DEWP(I)-32.0)*(5.0/9.0)\n#  A6 = (17.27*A5)/(237.3+A5)\n#  VAPOR(I) = 6.11*EXP(A6)\n#  From ea = 6.11 EXP (17.27 Tdew) / (237.3 + Tdew)\ndewpoint = as.numeric(levels(station.data$DewPoint))[station.data$DewPoint]\ndewpoint = na.interp(dewpoint)\ndewpoint = (dewpoint-32) *(5/9)\ndf$VaporPressure = 6.11 * exp( 17.27 * dewpoint / (237.3 + air.temperature.C))\n\ndf$PhotoPeriod = 0 # Not used in the model.\n\n\nprimary.stations[[station.index]] = df\n\nwrite.hot.file = function(df, filename, station.name, station.elevation, station.latitude, station.longitude, start, end) {\n  write(paste0('****************** INPUT FILE - ',filename,' - FOR RBM10 ****************'),\n      file = filename, append=FALSE)\n  write(paste0('******************           WEATHER STATION DATA        ****************'),\n      file = filename, append=TRUE)\n  write(station.name, file = filename, append=TRUE)\n  station.info = c('',1,station.elevation, station.latitude, station.longitude, start, end)\n  write.table(t(station.info), file = filename, append = TRUE, sep='  ', col.name=FALSE, quote=FALSE, row.names=FALSE)\n  write.table(df, file=filename, append=TRUE, sep='  ', col.name=FALSE, quote=FALSE, row.names=FALSE)\n}\n\n}\n\n# 2: create average T from Tmax and Tmin for non-first order stations\n# 3: synthesize data for non-first order stations with first order data\n\nfor(station.index in 3:4){\n  \nif(station.index == 3){\n  # wnatchee  \n  data.filename = '../Data/GHCND/USC00459074.2015.csv'\n  primary.station.index = 2\n  station.elevation = 626 # data file says 190.8, station data on ncdc says 626\n  filename = 'WNATCHEE.HOT'\n  station.name = 'WNATCHEE USC00459074, COOP'\n  station.latitude = 47\n  station.longitude = 120\n  start = '20150101'\n  end = '20151231'  \n} else if(station.index == 4){\n  # richland  \n  data.filename = '../Data/GHCND/USC00457015.2015.csv'\n  primary.station.index = 2\n  station.elevation = 373\n  filename = 'RICHLAND.HOT'\n  station.name = 'RICHLAND USC00457015, COOP'\n  station.latitude = 46\n  station.longitude = 119\n  start = '20150101'\n  end = '20151231'  \n}\n\n# prepare\nstation.data = read.csv(data.filename)\nstation.data$TMAX = na.interp(station.data$TMAX)\nstation.data$TMIN = na.interp(station.data$TMIN)\ntavg = (station.data$TMAX + station.data$TMIN)/2\nair.temperature.C = (tavg - 32)*5/9\nprimary.station = primary.stations[[primary.station.index]]\n\ndf = primary.station\n# Solar radiation comes from NARR\ndf$Solar = netswr.values[station.index,]\n# Atmospheric can still be calculated per station since we have cloud cover from NARR\nA1 = (1-0.03)*(1.23E-16)*(1.0+0.17*((clouds.values[station.index,]/100)**2.0))\nA2 = (air.temperature.C+273.)**6.0\ndf$Atmospheric = A1*A2\n# Air Temp\ndf$AirTemperature = air.temperature.C\n# Wind Speed is Synthesized, do nothing\n# Bowen Ratio can be calculated\ndf$Bowen = bowen.ratio(station.elevation, air.temperature.C)\n# Vapor Pressure has to be synthesized, since we don't have Wet Bulb T, so do nothing\n# the synthesis of vapor pressure from 1st order data might not be reliable, \n# since temperatures between stations can be quite different\n\ndf = round(df, 6)\nwrite.hot.file(df, filename, station.name, station.elevation, station.latitude, station.longitude, start, end)\n  \n}\n\n\ndata.filename = '../Data/GHCND/USC00459074.2015.csv'\nwn = read.csv(data.filename)\ndata.filename = '../Data/GHCND/USC00457015.2015.csv'\nri = read.csv(data.filename)\n",
    "created" : 1470094733733.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3786587189",
    "id" : "BB13F5DD",
    "lastKnownWriteTime" : 1470776103,
    "path" : "~/Documents/Projects/Columbia/R/MeteorologicalStations.R",
    "project_path" : "MeteorologicalStations.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}